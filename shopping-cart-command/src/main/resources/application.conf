akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 60 seconds

  actor {
    provider = cluster
    debug {
      receive = on
    }
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      bind-hostname = 0.0.0.0
      bind-port = 2552

      hostname = ${?HOST_IP}
      port = ${?HOST_PORT}
    }
  }

  cluster {
    downing-provider-class = "com.experiments.sbr.RoleBasedSplitBrainResolverProvider"
    split-brain-resolver {
      stable-after = 20 seconds
      essential-roles = []
    }
  }

  extensions = [de.heikoseeberger.constructr.ConstructrExtension]
}

cassandra-journal {
  keyspace = ${cassandra.keyspace}
  table = "cart_events"
  table = ${?EVENTS_TABLE}
  contact-points = [${cassandra.uri}]
  ssl.truststore.path = ${cassandra.truststore-path}
  ssl.truststore.password = ${cassandra.truststore-password}
  authentication.username = ${cassandra.username}
  authentication.password = ${cassandra.password}
  # tables are auto-created (this can be changed)
  keyspace-autocreate = ${cassandra.initialize-keyspace}

  event-adapters {
    tagging = "com.experiments.shopping.cart.actors.event.adapters.ShoppingCartTaggingEventAdapter"
  }

  event-adapter-bindings {
    "com.experiments.shopping.cart.actors.ShoppingCart$Event" = tagging
  }
}

cassandra-snapshot-store {
  keyspace = ${cassandra.keyspace}
  table = "cart_snapshots"
  table = ${?SNAPSHOTS_TABLE}
  contact-points = [${cassandra.uri}]
  ssl.truststore.path = ${cassandra.truststore-path}
  ssl.truststore.password = ${cassandra.truststore-password}
  authentication.username = ${cassandra.username}
  authentication.password = ${cassandra.password}
  # tables are auto-created (this can be changed)
  keyspace-autocreate = ${cassandra.initialize-keyspace}
}

cassandra {
  host = "localhost"
  host = ${?CASSANDRA_HOST}
  port = 9042
  port = ${?CASSANDRA_PORT}
  uri = ${cassandra.host}":"${cassandra.port}
  keyspace = "shopping_cart"
  keyspace = ${?APPLICATION_KEYSPACE}
  truststore-path = ""
  truststore-path = ${?TRUSTSTORE_TARGET_PATH}
  truststore-password = ""
  truststore-password = ${?TRUSTSTORE_PASSWORD}
  username = ""
  username = ${?CASSANDRA_USER}
  password = ""
  password = ${?CASSANDRA_PASSWORD}
  # used to tell Akka Persistence to automatically create the keyspace if it's not there already
  initialize-keyspace = true
  initialize-keyspace = ${?CASSANDRA_INITIALIZE_KEYSPACE}
}

zookeeper {
  # You can specify more than one URI using commas
  # For example: "10.10.10.10:2181,10.10.10.11:2181,10.10.10.12:2181"
  uris = "localhost:2181"
  uris = ${?ZOOKEEPER_URIS}
}

constructr {
  coordination.nodes = ${zookeeper.uris}
  ignore-refresh-failures = true
}

app {
  cart {
    number-of-shards = 100
    inactivity-duration = 30 seconds
  }
}
