akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 60 seconds

  actor {
    provider = cluster
    debug {
      receive = on
    }
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }
}

cassandra-journal {
  keyspace = ${cassandra.keyspace}
  table = "cart_events"
  table = ${?EVENTS_TABLE}
  contact-points = [${cassandra.uri}]
  ssl.truststore.path = ${cassandra.truststore-path}
  ssl.truststore.password = ${cassandra.truststore-password}
  authentication.username = ${cassandra.username}
  authentication.password = ${cassandra.password}
  # tables are auto-created (this can be changed)
  keyspace-autocreate = ${cassandra.initialize-keyspace}
}

cassandra-snapshot-store {
  keyspace = ${cassandra.keyspace}
  table = "cart_snapshots"
  table = ${?SNAPSHOTS_TABLE}
  contact-points = [${cassandra.uri}]
  ssl.truststore.path = ${cassandra.truststore-path}
  ssl.truststore.password = ${cassandra.truststore-password}
  authentication.username = ${cassandra.username}
  authentication.password = ${cassandra.password}
  # tables are auto-created (this can be changed)
  keyspace-autocreate = ${cassandra.initialize-keyspace}
}

cassandra {
  host = "localhost"
  host = ${?CASSANDRA_HOST}
  port = 9042
  port = ${?CASSANDRA_PORT}
  uri = ${cassandra.host}":"${cassandra.port}
  keyspace = "shopping_cart"
  keyspace = ${?APPLICATION_KEYSPACE}
  truststore-path = ""
  truststore-path = ${?TRUSTSTORE_TARGET_PATH}
  truststore-password = ""
  truststore-password = ${?TRUSTSTORE_PASSWORD}
  username = ""
  username = ${?CASSANDRA_USER}
  password = ""
  password = ${?CASSANDRA_PASSWORD}
  # used to tell Akka Persistence to automatically create the keyspace if it's not there already
  initialize-keyspace = true
  initialize-keyspace = ${?CASSANDRA_INITIALIZE_KEYSPACE}
}

app {
  cart {
    number-of-shards = 100
  }
}
